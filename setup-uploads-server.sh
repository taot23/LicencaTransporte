#!/bin/bash

# ====================================
# SCRIPT DE CONFIGURA√á√ÉO DE UPLOADS
# Sistema AET - Servidor Google Cloud
# ====================================

echo "üöÄ Configurando sistema de uploads para produ√ß√£o..."

# Configura√ß√µes
UPLOAD_BASE="/home/servidorvoipnvs/uploads"
PROJECT_DIR="/var/www/aetlicensesystem/LicencaTransporte"
WEB_USER="www-data"
CURRENT_USER=$(whoami)

echo "üìÅ Usu√°rio atual: $CURRENT_USER"
echo "üìÅ Diret√≥rio base: $UPLOAD_BASE"
echo "üìÅ Projeto: $PROJECT_DIR"

# Criar diret√≥rio principal de uploads
echo "üìÅ Criando diret√≥rio principal de uploads..."
mkdir -p "$UPLOAD_BASE"

# Criar subdiret√≥rios necess√°rios
echo "üìÅ Criando subdiret√≥rios..."
mkdir -p "$UPLOAD_BASE/vehicles"
mkdir -p "$UPLOAD_BASE/transporters" 
mkdir -p "$UPLOAD_BASE/boletos"
mkdir -p "$UPLOAD_BASE/licenses"
mkdir -p "$UPLOAD_BASE/temp"

# Definir permiss√µes adequadas
echo "üîê Configurando permiss√µes..."
chmod 755 "$UPLOAD_BASE"
chmod 755 "$UPLOAD_BASE"/*
chown -R "$CURRENT_USER:$CURRENT_USER" "$UPLOAD_BASE"

# Se www-data existir, dar permiss√µes tamb√©m
if id "$WEB_USER" &>/dev/null; then
    echo "üîê Configurando permiss√µes para $WEB_USER..."
    chgrp -R "$WEB_USER" "$UPLOAD_BASE"
    chmod -R g+w "$UPLOAD_BASE"
fi

# Criar arquivo de teste
echo "‚úÖ Testando grava√ß√£o..."
TEST_FILE="$UPLOAD_BASE/test-write.txt"
echo "Sistema AET - Teste de grava√ß√£o $(date)" > "$TEST_FILE"

if [ -f "$TEST_FILE" ]; then
    echo "‚úÖ Teste de grava√ß√£o bem-sucedido!"
    rm "$TEST_FILE"
else
    echo "‚ùå Falha no teste de grava√ß√£o!"
    exit 1
fi

# Criar arquivo de configura√ß√£o .env local
echo "‚öôÔ∏è Criando configura√ß√£o .env..."
ENV_FILE="$PROJECT_DIR/.env"

if [ ! -f "$ENV_FILE" ]; then
    echo "üìù Criando novo arquivo .env..."
    cat > "$ENV_FILE" << EOF
# Configura√ß√£o de produ√ß√£o - Servidor Google
NODE_ENV=production
UPLOAD_DIR=$UPLOAD_BASE
PORT=5000

# Configura√ß√£o do banco (ajustar conforme necess√°rio)
# DATABASE_URL=postgresql://usuario:senha@localhost:5432/aet_database

# Seguran√ßa
SESSION_SECRET=$(openssl rand -base64 32)
COOKIE_SECURE=false
COOKIE_MAX_AGE=86400000

# Logs
LOG_LEVEL=info
DEBUG_SQL=false
EOF
    echo "‚úÖ Arquivo .env criado!"
else
    echo "üìù Atualizando .env existente..."
    # Adicionar/atualizar UPLOAD_DIR no .env existente
    if grep -q "UPLOAD_DIR" "$ENV_FILE"; then
        sed -i "s|UPLOAD_DIR=.*|UPLOAD_DIR=$UPLOAD_BASE|" "$ENV_FILE"
    else
        echo "UPLOAD_DIR=$UPLOAD_BASE" >> "$ENV_FILE"
    fi
    echo "‚úÖ UPLOAD_DIR atualizado no .env!"
fi

# Mostrar status final
echo ""
echo "üéâ CONFIGURA√á√ÉO CONCLU√çDA!"
echo "üìä Status dos diret√≥rios:"
ls -la "$UPLOAD_BASE"

echo ""
echo "üîß Pr√≥ximos passos:"
echo "1. Reinicie o PM2: pm2 restart aet-license-system"
echo "2. Verifique os logs: pm2 logs aet-license-system"
echo "3. Teste um upload atrav√©s da interface"

echo ""
echo "üìã Informa√ß√µes importantes:"
echo "‚Ä¢ Diret√≥rio de uploads: $UPLOAD_BASE"
echo "‚Ä¢ Arquivo .env: $ENV_FILE"
echo "‚Ä¢ Usu√°rio propriet√°rio: $CURRENT_USER"
echo "‚Ä¢ Permiss√µes configuradas para escrita"

# Verificar se PM2 est√° instalado
if command -v pm2 &> /dev/null; then
    echo ""
    echo "üîÑ PM2 detectado. Reiniciando aplica√ß√£o..."
    cd "$PROJECT_DIR"
    pm2 restart aet-license-system 2>/dev/null || echo "‚ö†Ô∏è Aplica√ß√£o n√£o estava rodando no PM2"
    echo "‚úÖ Aplica√ß√£o reiniciada!"
else
    echo "‚ö†Ô∏è PM2 n√£o encontrado. Reinicie manualmente a aplica√ß√£o."
fi

echo ""
echo "üèÅ Setup conclu√≠do com sucesso!"